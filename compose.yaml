services:
    db:
      image: mysql:latest
      volumes:
        # データの永続化
        - db-store:/var/lib/mysql
        # データベースの設定
        - ./db/conf/my.cnf:/etc/mysql/conf.d/my.cnf
        # 初期データ投入
        - ./db/initdb:/docker-entrypoint-initdb.d
      container_name: completed-db-1
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=pass_manage
        - MYSQL_USER=flaskapp
        - MYSQL_PASSWORD=root
        - TZ="Asia/Tokyo"
      ports:
        - 3306:3306

    selenium-hub:
      image: selenium/hub:4.0.0
      ports:
        - 4444:4444
        - 4442:4442
        - 4443:4443
 
    node-chrome:
      image: selenium/node-chrome:4.0.0
      ports:
        - 5900:7900
      volumes:
        - /dev/shm:/dev/shm
      depends_on:
        - selenium-hub
      environment:
        - TZ=Asia/Tokyo
        - HUB_HOST=selenium-hub
        # hubとの接続で必要
        - SE_EVENT_BUS_HOST=selenium-hub
        - SE_EVENT_BUS_PUBLISH_PORT=4442
        - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
        # 同時実行数を増やす場合に設定を行う
        - SE_NODE_MAX_SESSIONS=4
        - SE_NODE_OVERRIDE_MAX_SESSIONS=true
 
    node-firefox:
      image: selenium/node-firefox:4.0.0
      ports:
        - 5901:7900
      volumes:
        - /dev/shm:/dev/shm
      depends_on:
        - selenium-hub
      environment:
        - TZ=Asia/Tokyo
        - HUB_HOST=selenium-hub
        - SE_EVENT_BUS_HOST=selenium-hub
        - SE_EVENT_BUS_PUBLISH_PORT=4442
        - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
        - SE_NODE_MAX_SESSIONS=4
        - SE_NODE_OVERRIDE_MAX_SESSIONS=true

    python-selenium-browser:
      build:
        context: .
        dockerfile: ./app/dockerfile
      #image: python/selenium_browser
      volumes:
        - ./app:/app
      depends_on:
        - selenium-hub
      tty: true
      environment:
        - HUB_HOST=selenium-hub
        #- BROWSER_NAME=chrome
      # コンテナ初回起動時にテスト実行
      # entrypoint: ./entry_point.sh

#    app:
#      build: 
#        context: .
#        dockerfile: ./webapp/Dockerfile
#      volumes:
      #- cron:/webapp/set.tab
#      - web:/webapp
#      depends_on:
#      - db
#      - selenium-chrome
#      ports:
#      - "5000:5000"
#      - "8000:8000"
#      tty: true

volumes:
#  web:
  db-store:
#  scraping:
#  cron: